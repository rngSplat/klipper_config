[idle_timeout]
gcode:
    lights_off
    TURN_OFF_HEATERS
    M84
timeout: 1200

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
default_parameter_X: 230
default_parameter_Y: 230
default_parameter_Z: 10
gcode:
    M104 S0
    M140 S0
    #M141 S0
    M106 S0
    CLEAR_PAUSE
    # RESET_SD
    M84
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_X: 230
default_parameter_Y: 230
default_parameter_Z: 10
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-1.7 F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000
    G91

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    G91
    G1 E1.7 F2100
    G91
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro DISABLE_MOTORS]
gcode:
    M18

[gcode_macro START_PRINT]
default_parameter_BED_TEMP: 60 #[first_layer_bed_temperature]
default_parameter_EXTRUDER_TEMP: 190 #[first_layer_temperature]
gcode:
    lights_on
    # Start bed heating
    M190 S{BED_TEMP}
    M104 S155
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    BED_MESH_CALIBRATE
    DOCK_PROBE
    # Move the nozzle near the bed
    G1 X0 Y0 Z5 F6000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}


[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-1 F300
    triple_beep
    # Raise nozzle by 0mm
    G1 Z20 F3000
    G90
    G1 X245 Y200
    # Disable steppers
    M84
    # SET_GCODE_OFFSET Z=0.0 # Reset the G-Code Z offset (adjust Z offset if needed)

######################################################################
# Debugging Macros
######################################################################

[gcode_macro DUMP_VARS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% endfor %}
   {% endfor %}

[gcode_macro DUMP_CONFIG_VARS]
gcode:
   {% for name1 in printer['configfile'].config %}
      #{% for name2 in printer[name1] %}
         { action_respond_info("printer['configfile'].%s" % (name1)) }
      #{% endfor %}
   {% endfor %}
